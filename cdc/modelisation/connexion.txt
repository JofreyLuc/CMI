@startuml
title Connexion standard

skinparam sequence {
	ArrowColor #046380
	ActorBorderColor #046380
	LifeLineBorderColor blue
	LifeLineBackgroundColor #A9DCDF
	
	GroupBorderColor #80064B
	ActorBackgroundColor #01B0F0
	ActorFontColor #046380
	ActorFontSize 17
	ActorFontName Aapex
}

actor User
hide footbox

activate User
User -> accueil : remplit formulaire

activate accueil

accueil -> script.js : onclick(email, mdp)
deactivate accueil

note right : Fonction déclenchée sur l'appui du bouton
script.js -> LoginController : POST('..LoginController@login', email, mdp)
note right : Slim permet de faire ce POST (AJAX), non ?


activate LoginController
LoginController -> BDD : Utilisateur::find(email, mdp)
note right : On essaie de récupérer les infos\nentrées par l'utilisateur dans la BDD
activate BDD
BDD --> LoginController : résultat de find
deactivate BDD

LoginController -> LoginController : Vérification login
note right : On va vérifier si on a effectivement\npu récupérer les infos de l'utilisateur\n(i.e. qu'elles sont correctes)
LoginController -> Navigateur : Création de variables de session
LoginController -> vueConnecte : render('vueConnecte')
note right : Encore utilisation de Slim ?..

deactivate LoginController

legend center
Frameworks utilisés : slim (développement), cordova (portabilité mobile)


User : l'utilisateur (physique) de l'application
accueil : Page php générique sur le site depuis laquelle l'utilisateur peut se connecter à tout instant
LoginController : Un contrôleur php gérant les connexions des utilisateurs, communiquant avec la BDD
script.js : Fichier JS permettant d'exécuter les requêtes AJAX et les appels aux contrôleurs
BDD : Base de données MySql de l'application. On communiquera avec elle en utilisant l'ORM Eloquent
end legend
@enduml@startuml
title Connexion standard

skinparam sequence {
	ArrowColor #046380
	ActorBorderColor #046380
	LifeLineBorderColor blue
	LifeLineBackgroundColor #A9DCDF
	
	GroupBorderColor #80064B
	ActorBackgroundColor #01B0F0
	ActorFontColor #046380
	ActorFontSize 17
	ActorFontName Aapex
}

actor User
hide footbox

activate User
User -> acceuil : remplit formulaire

activate accueil

accueil -> script.js : onclick(email, mdp)
deactivate accueil

note right : Fonction déclenchée sur l'appui du bouton
script.js -> LoginController : POST('..LoginController@login', email, mdp)
note right : Slim permet de faire ce POST (AJAX), non ?


activate LoginController
LoginController -> BDD : Utilisateur::find(email, mdp)
note right : On essaie de récupérer les infos\nentrées par l'utilisateur dans la BDD
activate BDD
BDD --> LoginController : résultat de find
deactivate BDD

LoginController -> LoginController : Vérification login
note right : On va vérifier si on a effectivement\npu récupérer les infos de l'utilisateur\n(i.e. qu'elles sont correctes)
LoginController -> vueConnecte : render('vueConnecte')
note right : Encore utilisation de Slim ?..
deactivate LoginController

legend center
Frameworks utilisés : slim (développement), cordova (portabilité mobile)


User : l'utilisateur (physique) de l'application
accueil : Page php générique sur le site depuis laquelle l'utilisateur peut se connecter à tout instant
LoginController : Un contrôleur php gérant les connexions des utilisateurs, communiquant avec la BDD
script.js : Fichier JS permettant d'exécuter les requêtes AJAX et les appels aux contrôleurs
BDD : Base de données MySql de l'application. On communiquera avec elle en utilisant l'ORM Eloquent
end legend
@enduml
